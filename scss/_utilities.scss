@use "sass:math";

$utilities: (
  "padding": (
    "child": (
      "default": "p",
      "left": "pl",
      "top": "pt",
      "right": "pr",
      "bottom": "pb",
    ),
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8,
    ),
  ),
  "margin": (
    "child": (
      "default": "m",
      "left": "ml",
      "top": "mt",
      "right": "mr",
      "bottom": "mb",
    ),
    "values": (
      "0": 0,
      "1": $base-padding,
      "2": $base-padding * 2,
      "3": $base-padding * 4,
      "4": $base-padding * 6,
      "5": $base-padding * 8,
    ),
  ),
  "opacity": (
    "child": (
      "default": "o",
    ),
    "values": (
      "10": 0.1,
      "20": 0.2,
      "30": 0.3,
      "40": 0.4,
      "50": 0.5,
      "60": 0.6,
      "70": 0.7,
      "80": 0.8,
      "90": 0.9,
      "100": 1,
    ),
  ),
  "border-radius": (
    "child": (
      "default": "br",
    ),
    "values": (
      "default": $base-border-radius,
      "none": 0,
      "xs": math.div($base-border-radius, 4),
      "sm": math.div($base-border-radius, 2),
      "lg": $base-border-radius * 2,
      "full": 50%,
    ),
  ),
  "display": (
    "child": (
        "default": "d"
    ),
    "values": (
        "none": "none",
        "inline": "inline",
        "inline-block": "inline-block",
        "block": "block",
        "flex": "flex",
    ),
  ),
  "font-size": (
    "child": (
        "default": "font"
    ),
    "values": (
        "sm": $font-size-sm,
        "md": $base-font-size,
        "lg": $font-size-lg,
        "xl": $font-size-xl,
        "xxl": $font-size-xxl,
    ),
  ),
);

//generate utility classes
@each $property, $map in $utilities {
  $child: map-get($map, "child");
  $values: map-get($map, "values");
  @each $child-prop, $prefix in $child {
    @each $key, $val in $values {
      $sub-prefix: -#{$key};
      @if ($key == "default") {
        $sub-prefix: "";
      }
      .#{$prefix}#{$sub-prefix} {
        @if ($child-prop == "default") {
          #{$property}: $val;
        } @else {
          #{$property}-#{$child-prop}: $val;
        }
      }
    }
  }
}
